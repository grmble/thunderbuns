name:                thunderbuns
version:             0.1.0.0
github:              "grmble/thunderbuns"
license:             MIT
author:              "Juergen Gmeiner"
maintainer:          "spamless.juergen@gmail.com"
copyright:           "(c) 2018-2019 Juergen Gmeiner"

extra-source-files:
- README.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on Github at <https://github.com/grmble/thunderbuns#readme>

# base 4.10 is stack lts 10 aka GHC 8.2.2
dependencies:
- base >= 4.10 && < 5
- aeson
- async
- attoparsec
- bunyan
- bunyan-rio
- bytestring
- containers
- connection
- data-default
- dhall
- d64
- d64-uuid
- formatting
- hashable
- http-api-data
- http-types
# - jose-jwt
- lens  # it's pulled in by dhall (i think), we might as well use it
- monad-logger # for runNoLoggingT
- mtl
- network-conduit-tls
- optparse-applicative
- persistent
- persistent-sqlite
- persistent-template
- resourcet
- resource-pool
- scientific
- text
- time
- transformers
- unliftio
- unordered-containers
- uuid
- wai
- wai-app-static
- wai-extra
- wai-websockets
- warp
- websockets

library:
  source-dirs: src

executables:
  thunderbuns-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -with-rtsopts=-T
    dependencies:
    - thunderbuns

tests:
  thunderbuns-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - thunderbuns
    - hspec
    - hspec-wai
    - hspec-wai-json
    - QuickCheck

#
# ghc options and default extensions ... see
# https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/
#

ghc-options: -Wall -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints


default-extensions:
- ApplicativeDo
- BangPatterns
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveLift
- DeriveTraversable
- DerivingStrategies
- EmptyCase
- ExistentialQuantification
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GADTs
- GeneralizedNewtypeDeriving
- InstanceSigs
- KindSignatures
- LambdaCase
- MultiParamTypeClasses
- MultiWayIf
- NamedFieldPuns
- OverloadedStrings
- PatternSynonyms
- RankNTypes
- ScopedTypeVariables
- StandaloneDeriving
- TupleSections
- TypeApplications
- TypeFamilies
- TypeFamilyDependencies
- TypeOperators

